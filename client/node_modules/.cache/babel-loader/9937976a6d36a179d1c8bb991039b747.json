{"ast":null,"code":"import _regeneratorRuntime from \"/Users/balajikamalanathan/Documents/GitHub/react-node-stripe-payment/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/balajikamalanathan/Documents/GitHub/react-node-stripe-payment/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/balajikamalanathan/Documents/GitHub/react-node-stripe-payment/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/balajikamalanathan/Documents/GitHub/react-node-stripe-payment/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nvar uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  var uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  var _getComputedStyle$ = getComputedStyle$1(element),\n    overflow = _getComputedStyle$.overflow,\n    overflowX = _getComputedStyle$.overflowX,\n    overflowY = _getComputedStyle$.overflowY,\n    display = _getComputedStyle$.display;\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  var isFirefox = /firefox/i.test(getUAString());\n  var css = getComputedStyle$1(element);\n  var backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(function (value) {\n    return css.willChange.includes(value);\n  }) || ['paint', 'layout', 'strict', 'content'].some(function (value) {\n    // Add type check for old browsers.\n    var contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nvar min = Math.min;\nvar max = Math.max;\nvar round = Math.round;\nfunction getCssDimensions(element) {\n  var css = getComputedStyle$1(element);\n  var width = parseFloat(css.width);\n  var height = parseFloat(css.height);\n  var hasOffset = isHTMLElement(element);\n  var offsetWidth = hasOffset ? element.offsetWidth : width;\n  var offsetHeight = hasOffset ? element.offsetHeight : height;\n  var shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width: width,\n    height: height,\n    fallback: shouldFallback\n  };\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nvar FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  var domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  var rect = domElement.getBoundingClientRect();\n  var _getCssDimensions = getCssDimensions(domElement),\n    width = _getCssDimensions.width,\n    height = _getCssDimensions.height,\n    fallback = _getCssDimensions.fallback;\n  var x = (fallback ? round(rect.width) : rect.width) / width;\n  var y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  var clientRect = element.getBoundingClientRect();\n  var domElement = unwrapElement(element);\n  var scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  var win = domElement ? getWindow(domElement) : window;\n  var addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  var y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  var width = clientRect.width / scale.x;\n  var height = clientRect.height / scale.y;\n  if (domElement) {\n    var _win = getWindow(domElement);\n    var offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    var currentIFrame = _win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== _win) {\n      var iframeScale = getScale(currentIFrame);\n      var iframeRect = currentIFrame.getBoundingClientRect();\n      var css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  });\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  var rect = _ref.rect,\n    offsetParent = _ref.offsetParent,\n    strategy = _ref.strategy;\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var scale = {\n    x: 1,\n    y: 1\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      var offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  var html = getDocumentElement(element);\n  var scroll = getNodeScroll(element);\n  var body = element.ownerDocument.body;\n  var width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  var height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  var x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  var result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  var parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  var scrollableAncestor = getNearestOverflowAncestor(node);\n  var isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  var win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  var clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  var top = clientRect.top + element.clientTop;\n  var left = clientRect.left + element.clientLeft;\n  var scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  var width = element.clientWidth * scale.x;\n  var height = element.clientHeight * scale.y;\n  var x = left * scale.x;\n  var y = top * scale.y;\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  var rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    var mutableRect = _objectSpread({}, clippingAncestor);\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      var win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  var parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  var cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  var result = getOverflowAncestors(element).filter(function (el) {\n    return isElement(el) && getNodeName(el) !== 'body';\n  });\n  var currentContainingBlockComputedStyle = null;\n  var elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  var currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    var computedStyle = getComputedStyle$1(currentNode);\n    var currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    var shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(function (ancestor) {\n        return ancestor !== currentNode;\n      });\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  var element = _ref.element,\n    boundary = _ref.boundary,\n    rootBoundary = _ref.rootBoundary,\n    strategy = _ref.strategy;\n  var elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  var clippingAncestors = [].concat(_toConsumableArray(elementClippingAncestors), [rootBoundary]);\n  var firstClippingAncestor = clippingAncestors[0];\n  var clippingRect = clippingAncestors.reduce(function (accRect, clippingAncestor) {\n    var rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  var currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  var window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  var offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      var offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nvar platform = {\n  getClippingRect: getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect: convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement: isElement,\n  getDimensions: getDimensions,\n  getOffsetParent: getOffsetParent,\n  getDocumentElement: getDocumentElement,\n  getScale: getScale,\n  getElementRects: function getElementRects(_ref) {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var reference, floating, strategy, getOffsetParentFn, getDimensionsFn;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            reference = _ref.reference, floating = _ref.floating, strategy = _ref.strategy;\n            getOffsetParentFn = _this.getOffsetParent || getOffsetParent;\n            getDimensionsFn = _this.getDimensions;\n            _context.t0 = getRectRelativeToOffsetParent;\n            _context.t1 = reference;\n            _context.next = 7;\n            return getOffsetParentFn(floating);\n          case 7:\n            _context.t2 = _context.sent;\n            _context.t3 = strategy;\n            _context.t4 = (0, _context.t0)(_context.t1, _context.t2, _context.t3);\n            _context.t5 = _objectSpread;\n            _context.t6 = {\n              x: 0,\n              y: 0\n            };\n            _context.next = 14;\n            return getDimensionsFn(floating);\n          case 14:\n            _context.t7 = _context.sent;\n            _context.t8 = (0, _context.t5)(_context.t6, _context.t7);\n            return _context.abrupt(\"return\", {\n              reference: _context.t4,\n              floating: _context.t8\n            });\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  getClientRects: function getClientRects(element) {\n    return Array.from(element.getClientRects());\n  },\n  isRTL: function isRTL(element) {\n    return getComputedStyle$1(element).direction === 'rtl';\n  }\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    _options$ancestorScro = _options.ancestorScroll,\n    ancestorScroll = _options$ancestorScro === void 0 ? true : _options$ancestorScro,\n    _options$ancestorResi = _options.ancestorResize,\n    ancestorResize = _options$ancestorResi === void 0 ? true : _options$ancestorResi,\n    _options$elementResiz = _options.elementResize,\n    elementResize = _options$elementResiz === void 0 ? true : _options$elementResiz,\n    _options$animationFra = _options.animationFrame,\n    animationFrame = _options$animationFra === void 0 ? false : _options$animationFra;\n  var ancestors = ancestorScroll || ancestorResize ? [].concat(_toConsumableArray(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), _toConsumableArray(getOverflowAncestors(floating))) : [];\n  ancestors.forEach(function (ancestor) {\n    // ignores Window, checks for [object VisualViewport]\n    var isVisualViewport = !isElement(ancestor) && ancestor.toString().includes('V');\n    if (ancestorScroll && (animationFrame ? isVisualViewport : true)) {\n      ancestor.addEventListener('scroll', update, {\n        passive: true\n      });\n    }\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  var observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(function () {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  var frameId;\n  var prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    var nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return function () {\n    var _observer;\n    ancestors.forEach(function (ancestor) {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nvar computePosition = function computePosition(reference, floating, options) {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  var cache = new Map();\n  var mergedOptions = _objectSpread({\n    platform: platform\n  }, options);\n  var platformWithCache = _objectSpread(_objectSpread({}, mergedOptions.platform), {}, {\n    _c: cache\n  });\n  return computePosition$1(reference, floating, _objectSpread(_objectSpread({}, mergedOptions), {}, {\n    platform: platformWithCache\n  }));\n};\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","isNode","value","Node","getNodeName","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","isElement","Element","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","_getComputedStyle$","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isClientRectVisualViewportBased","isLastTraversableNode","min","Math","max","round","getCssDimensions","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","fallback","unwrapElement","contextElement","FALLBACK_SCALE","x","y","getScale","domElement","rect","getBoundingClientRect","_getCssDimensions","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","mutableRect","_objectSpread","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","_toConsumableArray","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","getTrueOffsetParent","polyfill","getContainingBlock","getOffsetParent","getRectRelativeToOffsetParent","platform","getElementRects","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","reference","floating","getOffsetParentFn","getDimensionsFn","wrap","_callee$","_context","prev","next","t0","t1","t2","sent","t3","t4","t5","t6","t7","t8","abrupt","stop","getClientRects","from","isRTL","autoUpdate","update","options","_options","_options$ancestorScro","ancestorScroll","_options$ancestorResi","ancestorResize","_options$elementResiz","elementResize","_options$animationFra","animationFrame","ancestors","forEach","isVisualViewport","toString","addEventListener","passive","observer","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["/Users/balajikamalanathan/Documents/GitHub/react-node-stripe-payment/client/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    // ignores Window, checks for [object VisualViewport]\n    const isVisualViewport = !isElement(ancestor) && ancestor.toString().includes('V');\n    if (ancestorScroll && (animationFrame ? isVisualViewport : true)) {\n      ancestor.addEventListener('scroll', update, {\n        passive: true\n      });\n    }\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}